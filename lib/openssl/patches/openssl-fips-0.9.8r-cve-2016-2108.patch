diff -Nru openssl-0.9.8r_org/crypto/asn1/a_int.c openssl-0.9.8r_new/crypto/asn1/a_int.c
--- openssl-0.9.8r_org/crypto/asn1/a_int.c	2010-06-12 21:18:47.000000000 +0800
+++ openssl-0.9.8r_new/crypto/asn1/a_int.c	2016-05-18 22:12:11.345099704 +0800
@@ -124,6 +124,8 @@
 		{
 		ret=a->length;
 		i=a->data[0];
+		if (ret == 1 && i == 0)
+			neg = 0;
 		if (!neg && (i > 127)) {
 			pad=1;
 			pb=0;
@@ -157,7 +159,7 @@
 		p += a->length - 1;
 		i = a->length;
 		/* Copy zeros to destination as long as source is zero */
-		while(!*n) {
+		while(!*n && i >1) {
 			*(p--) = 0;
 			n--;
 			i--;
@@ -415,7 +417,7 @@
 		ASN1err(ASN1_F_BN_TO_ASN1_INTEGER,ERR_R_NESTED_ASN1_ERROR);
 		goto err;
 		}
-	if (BN_is_negative(bn))
+	if (BN_is_negative(bn) && !BN_is_zero(bn))
 		ret->type = V_ASN1_NEG_INTEGER;
 	else ret->type=V_ASN1_INTEGER;
 	j=BN_num_bits(bn);
diff -Nru openssl-0.9.8r_org/crypto/asn1/asn1.h openssl-0.9.8r_new/crypto/asn1/asn1.h
--- openssl-0.9.8r_org/crypto/asn1/asn1.h	2011-01-25 00:21:00.000000000 +0800
+++ openssl-0.9.8r_new/crypto/asn1/asn1.h	2016-05-18 22:07:43.889095292 +0800
@@ -769,6 +769,7 @@
 int ASN1_TYPE_get(ASN1_TYPE *a);
 void ASN1_TYPE_set(ASN1_TYPE *a, int type, void *value);
 int ASN1_TYPE_set1(ASN1_TYPE *a, int type, const void *value);
+int ASN1_TYPE_cmp(const ASN1_TYPE *a, const ASN1_TYPE *b);
 
 ASN1_OBJECT *	ASN1_OBJECT_new(void );
 void		ASN1_OBJECT_free(ASN1_OBJECT *a);
diff -Nru openssl-0.9.8r_org/crypto/asn1/a_type.c openssl-0.9.8r_new/crypto/asn1/a_type.c
--- openssl-0.9.8r_org/crypto/asn1/a_type.c	2008-04-02 19:11:49.000000000 +0800
+++ openssl-0.9.8r_new/crypto/asn1/a_type.c	2016-05-18 22:13:43.797101230 +0800
@@ -108,3 +108,49 @@
 
 IMPLEMENT_STACK_OF(ASN1_TYPE)
 IMPLEMENT_ASN1_SET_OF(ASN1_TYPE)
+/* Returns 0 if they are equal, != 0 otherwise. */
+int ASN1_TYPE_cmp(const ASN1_TYPE *a, const ASN1_TYPE *b)
+{
+    int result = -1;
+
+    if (!a || !b || a->type != b->type)
+        return -1;
+
+    switch (a->type) {
+    case V_ASN1_OBJECT:
+        result = OBJ_cmp(a->value.object, b->value.object);
+        break;
+    case V_ASN1_BOOLEAN:
+        result = a->value.boolean - b->value.boolean;
+        break;
+    case V_ASN1_NULL:
+        result = 0;             /* They do not have content. */
+        break;
+    case V_ASN1_INTEGER:
+    case V_ASN1_ENUMERATED:
+    case V_ASN1_BIT_STRING:
+    case V_ASN1_OCTET_STRING:
+    case V_ASN1_SEQUENCE:
+    case V_ASN1_SET:
+    case V_ASN1_NUMERICSTRING:
+    case V_ASN1_PRINTABLESTRING:
+    case V_ASN1_T61STRING:
+    case V_ASN1_VIDEOTEXSTRING:
+    case V_ASN1_IA5STRING:
+    case V_ASN1_UTCTIME:
+    case V_ASN1_GENERALIZEDTIME:
+    case V_ASN1_GRAPHICSTRING:
+    case V_ASN1_VISIBLESTRING:
+    case V_ASN1_GENERALSTRING:
+    case V_ASN1_UNIVERSALSTRING:
+    case V_ASN1_BMPSTRING:
+    case V_ASN1_UTF8STRING:
+    case V_ASN1_OTHER:
+    default:
+        result = ASN1_STRING_cmp((ASN1_STRING *)a->value.ptr,
+                                 (ASN1_STRING *)b->value.ptr);
+        break;
+    }
+
+    return result;
+}
diff -Nru openssl-0.9.8r_org/crypto/asn1/tasn_dec.c openssl-0.9.8r_new/crypto/asn1/tasn_dec.c
--- openssl-0.9.8r_org/crypto/asn1/tasn_dec.c	2016-05-18 22:05:56.409093518 +0800
+++ openssl-0.9.8r_new/crypto/asn1/tasn_dec.c	2016-05-18 22:12:54.861100422 +0800
@@ -1007,9 +1007,7 @@
 		break;
 
 		case V_ASN1_INTEGER:
-		case V_ASN1_NEG_INTEGER:
 		case V_ASN1_ENUMERATED:
-		case V_ASN1_NEG_ENUMERATED:
 		tint = (ASN1_INTEGER **)pval;
 		if (!c2i_ASN1_INTEGER(tint, &cont, len))
 			goto err;
diff -Nru openssl-0.9.8r_org/crypto/asn1/tasn_enc.c openssl-0.9.8r_new/crypto/asn1/tasn_enc.c
--- openssl-0.9.8r_org/crypto/asn1/tasn_enc.c	2008-11-06 02:36:38.000000000 +0800
+++ openssl-0.9.8r_new/crypto/asn1/tasn_enc.c	2016-05-18 22:13:18.337100810 +0800
@@ -637,9 +637,7 @@
 		break;
 
 		case V_ASN1_INTEGER:
-		case V_ASN1_NEG_INTEGER:
 		case V_ASN1_ENUMERATED:
-		case V_ASN1_NEG_ENUMERATED:
 		/* These are all have the same content format
 		 * as ASN1_INTEGER
 		 */
diff -Nru openssl-0.9.8r_org/crypto/asn1/x_algor.c openssl-0.9.8r_new/crypto/asn1/x_algor.c
--- openssl-0.9.8r_org/crypto/asn1/x_algor.c	2008-11-06 02:36:39.000000000 +0800
+++ openssl-0.9.8r_new/crypto/asn1/x_algor.c	2016-05-18 22:07:43.893095292 +0800
@@ -128,3 +128,13 @@
 		}
 	}
 
+int X509_ALGOR_cmp(const X509_ALGOR *a, const X509_ALGOR *b)
+{
+    int rv;
+    rv = OBJ_cmp(a->algorithm, b->algorithm);
+    if (rv)
+        return rv;
+    if (!a->parameter && !b->parameter)
+        return 0;
+    return ASN1_TYPE_cmp(a->parameter, b->parameter);
+}
diff -Nru openssl-0.9.8r_org/crypto/x509/x509.h openssl-0.9.8r_new/crypto/x509/x509.h
--- openssl-0.9.8r_org/crypto/x509/x509.h	2010-10-04 02:55:57.000000000 +0800
+++ openssl-0.9.8r_new/crypto/x509/x509.h	2016-05-18 22:07:43.893095292 +0800
@@ -870,6 +870,7 @@
 int X509_ALGOR_set0(X509_ALGOR *alg, ASN1_OBJECT *aobj, int ptype, void *pval);
 void X509_ALGOR_get0(ASN1_OBJECT **paobj, int *pptype, void **ppval,
 						X509_ALGOR *algor);
+int X509_ALGOR_cmp(const X509_ALGOR *a, const X509_ALGOR *b);
 
 X509_NAME *X509_NAME_dup(X509_NAME *xn);
 X509_NAME_ENTRY *X509_NAME_ENTRY_dup(X509_NAME_ENTRY *ne);
diff -Nru openssl-0.9.8r_org/crypto/x509/x_all.c openssl-0.9.8r_new/crypto/x509/x_all.c
--- openssl-0.9.8r_org/crypto/x509/x_all.c	2010-10-04 02:55:57.000000000 +0800
+++ openssl-0.9.8r_new/crypto/x509/x_all.c	2016-05-18 22:07:43.893095292 +0800
@@ -73,6 +73,8 @@
 
 int X509_verify(X509 *a, EVP_PKEY *r)
 	{
+    if (X509_ALGOR_cmp(a->sig_alg, a->cert_info->signature))
+        return 0;
 	return(ASN1_item_verify(ASN1_ITEM_rptr(X509_CINF),a->sig_alg,
 		a->signature,a->cert_info,r));
 	}
