# This is a template for submitting snort signature descriptions to
# the snort.org website
#
# Ensure that your descriptions are your own
# and not the work of others.  References in the rules themselves
# should be used for linking to other's work. 
#
# If you are unsure of some part of a rule, use that as a commentary
# and someone else perhaps will be able to fix it.
# 
# $Id: 651.txt,v 1.1 2002/06/02 18:51:53 cazz Exp $
#
# 

Rule:  
alert ip $EXTERNAL_NET any -> $HOME_NET $SHELLCODE_PORTS (msg:"SHELLCODE x86 stealth NOOP"; content: "|eb 02 eb 02 eb 02|"; reference:arachnids,291;classtype:shellcode-detect; sid:651; rev:5;) 

--
Sid:
651

--
Summary:
Binary data in the packet matched one kind of byte sequence used as filler in buffer overflow attacks.

--
Impact:
It is possible someone was attempting a buffer overflow to gain unauthorized access to one of your servers.

--
Detailed Information:
This rule triggers when a binary pattern appears in the packet contents which matches one form of filler-bytes used in buffer overflow attacks. Buffer overflows allow execution of arbitrary code with the privlege level of the affected server process. A very detailed discussion of how basic buffer overflows work can be found in the text of "Smashing the stack for fun and profit" by Aleph One in Phrack #49.

--
Attack Scenarios:
If the attacker suspects you have a server which is vulnerable to buffer overflow, they will attempt to exploit this vulnerability to gain access.


--
Ease of Attack:
Tools that use buffer overflows with stealth nop are widely available.

--
False Positives:
This byte pattern can naturally occur in almost any binary data, so file downloads, streaming media, etc can cause this to false positive. If this traffic appears to be coming from a web or ftp server outside your network to one of your client machines, it is likely a false alert caused by someone downloading a binary file. If this was directed at a port on one of your machines which is running a server process, you may want to check to see if it has been exploited.

--
False Negatives:

--
Corrective Action:

--
Contributors:
Matt Kettler mkettler@evi-inc.com	Initial Research
Josh Gray	Edits

-- 
Additional References:
http://online.securityfocus.com/library/14

