# video_basic: The 'basic' color-changing video module.
[video_basic]
path		CAMSERV_MODDIR/libvideo_basic.so.0

# video_v4l_bttv:  Example of a common BTTV module for video4linux.  
# port 0 == TV, port 1 = Composite 1, port 2 = Composite 2
# frequency == is the channel frequency for the TV
# autobright == 0 turns off autobrightness adjusting, otherwise it adjusts
#               the brightness of the picture every 'autobright' frames.
# brightmean == The mean pixel value that is the 'goal' of the autobright.
#               (0->255)
# brightx1->y2 == (x1,y1) top left coords, and (x2,y2) bottom right coords
#                 of a rectangle of which to take the average pixel value.
#                 this is then used in calculating the mean to adjust the
#                 brightness of the image.
# mode == the video norm to use:  0 == PAL, 1 == NTSC, 2 == SECAM, 3 == AUTO
# color,hue,contrast,brightness,whiteness = 0->60000, representing
# the value of each component.

[video_v4l_bttv]
path		CAMSERV_MODDIR/libvideo_v4l.so.0
device_path	/dev/video0
port		0
mode		3
#frequency	74.43
color		30000
hue		30000
contrast	30000
brightness	30000
whiteness	30000
autobright	1
brightmean      128
brightx1	0
brighty1	320
brightx2	0
brighty2	240

# FreeBSD BTTV driver:
# port 0  = Video
#      1  = Tuner
# Channel Sets:
# nabscst   1
# cableirc  2
# cablehrc  3
# weurope   4
# jpnbcst   5
# jpncable  6
# xussr     7
# australia 8

[video_fbsd_bttv]
path		CAMSERV_MODDIR/libvideo_fbsd_bttv.so.0
port		1
width		320
height		240
autobright	100
#brightness	0
#chroma		180
#contrast	1000
channelset      2
channel         60

[video_v4l_qcam]
path		CAMSERV_MODDIR/libvideo_v4l.so.0
device_path	/dev/video1
port		0
color		30000
hue		30000
contrast	30000
brightness	30000
whiteness	30000
autobright	0


[jpg_filter]
path            CAMSERV_MODDIR/libjpg_filter.so.0
quality		30

# text_filters:  Text filters are used to provide text on your webcam
# bg,fg          == #RRGGBB if RGB camera, #CC if B&W camera,else 'transparent'
# x,y            == Coordinates for the text
# mangle         == 0 turns off mangling of the 'text', 1 turns it on
# text           == Text to display.  If mangling == 1, special metachars
#                   such as '%X' will be expanded -- see date(1) for lots of
#                   flags
# fontname       == 6x11 or 8x8 for the fontsize.

[hello_world_banner]
path            CAMSERV_MODDIR/libtext_filter.so.0
text		Hello World
bg		#000000
fg		#ffffff
x		0
y		0
mangle		0
fontname	6x11

[time_stamp]
path            CAMSERV_MODDIR/libtext_filter.so.0
text		Time: %X
bg		#000000
fg		#ffffff
x		0
y		11
mangle		1
fontname	8x8

[static_filter]
path		CAMSERV_MODDIR/librand_filter.so.0
num_perline	20
coloredpix	0

#
# You can add the imlib2_filter to your filters list to display pictures
# over your own, or small regions, or whatever your heart desires.
[imlib2_filter]
path		CAMSERV_MODDIR/libimlib2_filter.so.0
file		/tmp/my_nasty_picture.png
x		0
y		0

##########################################
#  Begin Fixed Sections                  #
##########################################

# socket parameters:
#	listen_port = port the camserv program listens on
#       max_frames  = Maximum # of frames to send to the client before
#                     closing the connection (0 disables)
#       max_bytes   = Maximum # of bytes to send to a client before
#                     closing the connection (0 disables)
#       max_seconds = Maximum # of seconds a client can be connected before
#                     being closed (0 disables)

[socket]
listen_port		9192
max_frames		0
max_bytes		0
max_seconds		0

[filters]
num_filters   	      	2
filter0_section		time_stamp
filter1_section		jpg_filter


# [video] - This section is devoted to all things dealing with the pictures
#           taken by the input video module.  These are general things which
#           should be used by all video modules.
#
#           IMPORTANT:  If you are seeing cycling colours instead of the
#                       video for your camera, you need to change video_basic
#                       to video_v4l_qcam or video_v4l_bttv

[video]
video_section		video_basic
width			320
height			240
maxfps                  0
memhack			1


[main]
# To do a single time invocation of the output from the camserv, 
# use output_snapfile which designates the output location, and 
# output_presnaps to take a number of pictures before finally outputting
# the final image.
#output_snapfile		foo.jpg
#output_presnaps		100
