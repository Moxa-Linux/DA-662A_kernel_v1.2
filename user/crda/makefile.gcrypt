# History:
# Date		Author			Comment
# 06-25-2014	Jared Wu.		First created
#
# pre-requirement:
#	apt-get install python-m2crypto libgpg-error-dev libgcrypt11-dev libnl-dev
#
# compile: 
#	make user/crda_only
#

all: build_$(CONFIGURE_TARGET)-linux/host-regdbdump build_$(CONFIGURE_TARGET)-linux/regdump

build_$(CONFIGURE_TARGET)-linux/host-regdbdump:build_$(CONFIGURE_TARGET)-linux/host-configured
	unset CC LD LDFLAGS CFLAGS CPPFLAGS CXXFLAGS && \
	REG_BIN=`pwd`/wireless-regdb/regulatory.bin \
	V=1 \
	make -C build_$(CONFIGURE_TARGET)-linux
	mv build_$(CONFIGURE_TARGET)-linux/regdbdump build_$(CONFIGURE_TARGET)-linux/host-regdbdump
	make -C build_$(CONFIGURE_TARGET)-linux clean

build_$(CONFIGURE_TARGET)-linux/host-configured:build_$(CONFIGURE_TARGET)-linux/pre-installed
	rm -rf build_$(CONFIGURE_TARGET)-linux
	tar xjf crda-1.1.2.tar.bz2
	mv crda-1.1.2 build_$(CONFIGURE_TARGET)-linux
	touch build_$(CONFIGURE_TARGET)-linux/host-configured


build_$(CONFIGURE_TARGET)-linux/regdump:build_$(CONFIGURE_TARGET)-linux/configured
	unset LDFLAGS CFLAGS CPPFLAGS CXXFLAGS && \
	REG_BIN=`pwd`/wireless-regdb/regulatory.bin \
	NLLIBNAME="libnl-1" \
	NLLIBS="-L$(TC_LIBDIR) -lnl" \
	CFLAGS="-I$(TC_INSTALL_PREFIX)/include -I$(ROOTDIR)/lib/libnl/build_$(CONFIGURE_TARGET)-linux/include -I$(ROOTDIR)/lib/libgpg-error/build_$(CONFIGURE_TARGET)-linux/install-me-here/include -I$(ROOTDIR)/lib/libgcrypt/build_$(CONFIGURE_TARGET)-linux/install-me-here/include" \
	LDFLAGS="-L$(ROOTDIR)/lib/libgpg-error/build_$(CONFIGURE_TARGET)-linux/install-me-here/lib -L$(ROOTDIR)/lib/libgcrypt/build_$(CONFIGURE_TARGET)-linux/install-me-here/lib -lgpg-error -lgcrypt" \
	CC="$(CC)" \
	LD="$(LD)" \
	V=1 \
	make -C build_$(CONFIGURE_TARGET)-linux 
	touch build_$(CONFIGURE_TARGET)-linux/build

build_$(CONFIGURE_TARGET)-linux/configured:build_$(CONFIGURE_TARGET)-linux/pre-installed
	sed -i 's/NLLIBS += `pkg-config --libs $$(NLLIBNAME)`/#NLLIBS += `pkg-config --libs $$(NLLIBNAME)`/g' build_$(CONFIGURE_TARGET)-linux/Makefile
	sed -i 's/CFLAGS += `pkg-config --cflags $$(NLLIBNAME)`/#CFLAGS += `pkg-config --cflags $$(NLLIBNAME)`/g' build_$(CONFIGURE_TARGET)-linux/Makefile
	sed -i 's/`pkg-config --cflags openssl`//g' build_$(CONFIGURE_TARGET)-linux/Makefile
	sed -i 's/`pkg-config --libs openssl`//g' build_$(CONFIGURE_TARGET)-linux/Makefile
	sed -i 's/.\/regdbdump/.\/host-regdbdump/g' build_$(CONFIGURE_TARGET)-linux/Makefile
	touch build_$(CONFIGURE_TARGET)-linux/configured

build_$(CONFIGURE_TARGET)-linux/pre-installed:
	# If your system has not install these packages, you can uncomment this line to install the packages
	apt-get install -y python-m2crypto libgpg-error-dev libgcrypt11-dev libnl-dev

romfs: $(TC_INSTALL_PREFIX)/bin/ssh
	$(ROMFSINST) $(TC_INSTALL_PREFIX)/bin/ssh /bin/ssh
	$(STRIP) -s $(ROMFSDIR)/bin/ssh
	$(ROMFSINST) $(TC_INSTALL_PREFIX)/sbin/sshd /bin/sshd
	$(STRIP) -s $(ROMFSDIR)/bin/sshd
	$(ROMFSINST) $(TC_INSTALL_PREFIX)/bin/scp /bin/scp
	$(STRIP) -s $(ROMFSDIR)/bin/scp
	$(ROMFSINST) $(TC_INSTALL_PREFIX)/bin/sftp /bin/sftp
	$(STRIP) -s $(ROMFSDIR)/bin/sftp
	$(ROMFSINST) $(TC_INSTALL_PREFIX)/libexec/sftp-server /bin/sftp-server
	$(STRIP) -s $(ROMFSDIR)/bin/sftp-server
	$(ROMFSINST) $(TC_INSTALL_PREFIX)/bin/ssh-keygen /bin/ssh-keygen
	$(STRIP) -s $(ROMFSDIR)/bin/ssh-keygen

package: $(TC_INSTALL_PREFIX)/bin/ssh

clean distclean:
	rm -fr build_$(CONFIGURE_TARGET)-linux;
