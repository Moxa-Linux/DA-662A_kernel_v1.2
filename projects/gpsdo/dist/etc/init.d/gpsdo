#!/bin/sh
### BEGIN INIT INFO
# Provides:          gpsdo
# Required-Start:    
# Required-Stop:     
# Default-Start:     3
# Default-Stop:      0 6
# Short-Description: Start/stop DO control by GPS
### END INIT INFO

set -e

INTERVAL=5
ARGUMENT="-t $INTERVAL -a"
NAME=gps-daemon
COMMAND=/usr/bin/gps-daemon
PIDFILE=/var/run/$NAME.pid
DBDIR=/home/httpd/htdocs/sqlite

if [ ! -x $COMMAND ] ; then
	echo "No gpsdo installed"
	exit 0
fi

if [ -f "$DBDIR/moxa.sql" ]; then
	if [ ! -f "/dev/shm/moxa.db" ]; then
		cat $DBDIR/moxa.sql | sqlite3 /dev/shm/moxa.db
		chmod 777 /dev/shm
		chmod 777 /dev/shm/moxa.db
	fi
else
	echo "No database exist"
	exit 0
fi

pidof_gpsdo() {
	# if there is actually an process whose pid is in PIDFILE,
	# print it and return 0.
	if [ -e "$PIDFILE" ]; then
		if pidof $NAME | tr ' ' '\n' | grep -w $(cat $PIDFILE); then
			return 0
		fi
	fi
	return 1
}


case $1 in
	start)
		echo -n "Starting GPS daemon to configure DO: "
		$COMMAND $ARGUMENT
		PID=$(pidof $NAME)
		if [ $? -eq 0 ]; then
			#pidof $NAME > $PIDFILE
			echo $PID > $PIDFILE
			echo "success"
		else
			echo "failed"
		fi
	;;
	stop)
		PID=$(pidof_gpsdo) || true
		if [ -n "$PID" ]; then
			kill $PID
			rm $PIDFILE
		fi
	;;
	restart)
		start
		stop
	;;
	status)
		PID=$(pidof_gpsdo) || true
		if [ -n "$PID" ]; then
			echo "$NAME is running (pid $PID)."
			exit 0
		else
			echo "$NAME is NOT running."
			if [ -e "$PIDFILE" ]; then
				exit 1
			else
				exit 3
			fi
		fi
	;;
	*)
		echo "Usage: /etc/init.d/gpsdo {start|stop|restart|status}"
		exit 1
	;;
esac
